/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mraa;

public class mraaJNI {
  public final static native int INTEL_GALILEO_GEN1_get();
  public final static native int INTEL_GALILEO_GEN2_get();
  public final static native int INTEL_EDISON_FAB_C_get();
  public final static native int INTEL_DE3815_get();
  public final static native int INTEL_MINNOWBOARD_MAX_get();
  public final static native int RASPBERRY_PI_get();
  public final static native int BEAGLEBONE_get();
  public final static native int BANANA_get();
  public final static native int INTEL_NUC5_get();
  public final static native int A96BOARDS_get();
  public final static native int INTEL_SOFIA_3GR_get();
  public final static native int INTEL_CHERRYHILLS_get();
  public final static native int INTEL_UP_get();
  public final static native int INTEL_JOULE_EXPANSION_get();
  public final static native int PHYBOARD_WEGA_get();
  public final static native int DE_NANO_SOC_get();
  public final static native int FTDI_FT4222_get();
  public final static native int GENERIC_FIRMATA_get();
  public final static native int NULL_PLATFORM_get();
  public final static native int UNKNOWN_PLATFORM_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_1_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_5_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_7_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_8_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_9_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_10_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_11_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_12_get();
  public final static native int INTEL_EDISON_MINIBOARD_J17_14_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_1_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_2_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_6_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_7_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_8_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_10_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_11_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_12_get();
  public final static native int INTEL_EDISON_MINIBOARD_J18_13_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_4_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_5_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_6_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_8_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_9_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_10_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_11_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_12_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_13_get();
  public final static native int INTEL_EDISON_MINIBOARD_J19_14_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_3_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_4_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_5_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_6_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_7_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_8_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_9_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_10_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_11_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_12_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_13_get();
  public final static native int INTEL_EDISON_MINIBOARD_J20_14_get();
  public final static native int INTEL_EDISON_GP182_get();
  public final static native int INTEL_EDISON_GP135_get();
  public final static native int INTEL_EDISON_GP27_get();
  public final static native int INTEL_EDISON_GP20_get();
  public final static native int INTEL_EDISON_GP28_get();
  public final static native int INTEL_EDISON_GP111_get();
  public final static native int INTEL_EDISON_GP109_get();
  public final static native int INTEL_EDISON_GP115_get();
  public final static native int INTEL_EDISON_GP128_get();
  public final static native int INTEL_EDISON_GP13_get();
  public final static native int INTEL_EDISON_GP165_get();
  public final static native int INTEL_EDISON_GP19_get();
  public final static native int INTEL_EDISON_GP12_get();
  public final static native int INTEL_EDISON_GP183_get();
  public final static native int INTEL_EDISON_GP110_get();
  public final static native int INTEL_EDISON_GP114_get();
  public final static native int INTEL_EDISON_GP129_get();
  public final static native int INTEL_EDISON_GP130_get();
  public final static native int INTEL_EDISON_GP44_get();
  public final static native int INTEL_EDISON_GP46_get();
  public final static native int INTEL_EDISON_GP48_get();
  public final static native int INTEL_EDISON_GP131_get();
  public final static native int INTEL_EDISON_GP14_get();
  public final static native int INTEL_EDISON_GP40_get();
  public final static native int INTEL_EDISON_GP43_get();
  public final static native int INTEL_EDISON_GP77_get();
  public final static native int INTEL_EDISON_GP82_get();
  public final static native int INTEL_EDISON_GP83_get();
  public final static native int INTEL_EDISON_GP134_get();
  public final static native int INTEL_EDISON_GP45_get();
  public final static native int INTEL_EDISON_GP47_get();
  public final static native int INTEL_EDISON_GP49_get();
  public final static native int INTEL_EDISON_GP15_get();
  public final static native int INTEL_EDISON_GP84_get();
  public final static native int INTEL_EDISON_GP42_get();
  public final static native int INTEL_EDISON_GP41_get();
  public final static native int INTEL_EDISON_GP78_get();
  public final static native int INTEL_EDISON_GP79_get();
  public final static native int INTEL_EDISON_GP80_get();
  public final static native int INTEL_EDISON_GP81_get();
  public final static native int RASPBERRY_WIRING_PIN8_get();
  public final static native int RASPBERRY_WIRING_PIN9_get();
  public final static native int RASPBERRY_WIRING_PIN7_get();
  public final static native int RASPBERRY_WIRING_PIN15_get();
  public final static native int RASPBERRY_WIRING_PIN16_get();
  public final static native int RASPBERRY_WIRING_PIN0_get();
  public final static native int RASPBERRY_WIRING_PIN1_get();
  public final static native int RASPBERRY_WIRING_PIN2_get();
  public final static native int RASPBERRY_WIRING_PIN3_get();
  public final static native int RASPBERRY_WIRING_PIN4_get();
  public final static native int RASPBERRY_WIRING_PIN5_get();
  public final static native int RASPBERRY_WIRING_PIN12_get();
  public final static native int RASPBERRY_WIRING_PIN13_get();
  public final static native int RASPBERRY_WIRING_PIN6_get();
  public final static native int RASPBERRY_WIRING_PIN14_get();
  public final static native int RASPBERRY_WIRING_PIN10_get();
  public final static native int RASPBERRY_WIRING_PIN11_get();
  public final static native int RASPBERRY_WIRING_PIN17_get();
  public final static native int RASPBERRY_WIRING_PIN21_get();
  public final static native int RASPBERRY_WIRING_PIN18_get();
  public final static native int RASPBERRY_WIRING_PIN19_get();
  public final static native int RASPBERRY_WIRING_PIN22_get();
  public final static native int RASPBERRY_WIRING_PIN20_get();
  public final static native int RASPBERRY_WIRING_PIN26_get();
  public final static native int RASPBERRY_WIRING_PIN23_get();
  public final static native int RASPBERRY_WIRING_PIN24_get();
  public final static native int RASPBERRY_WIRING_PIN27_get();
  public final static native int RASPBERRY_WIRING_PIN25_get();
  public final static native int RASPBERRY_WIRING_PIN28_get();
  public final static native int RASPBERRY_WIRING_PIN29_get();
  public final static native int SUCCESS_get();
  public final static native int ERROR_FEATURE_NOT_IMPLEMENTED_get();
  public final static native int ERROR_FEATURE_NOT_SUPPORTED_get();
  public final static native int ERROR_INVALID_VERBOSITY_LEVEL_get();
  public final static native int ERROR_INVALID_PARAMETER_get();
  public final static native int ERROR_INVALID_HANDLE_get();
  public final static native int ERROR_NO_RESOURCES_get();
  public final static native int ERROR_INVALID_RESOURCE_get();
  public final static native int ERROR_INVALID_QUEUE_TYPE_get();
  public final static native int ERROR_NO_DATA_AVAILABLE_get();
  public final static native int ERROR_INVALID_PLATFORM_get();
  public final static native int ERROR_PLATFORM_NOT_INITIALISED_get();
  public final static native int ERROR_UART_OW_SHORTED_get();
  public final static native int ERROR_UART_OW_NO_DEVICES_get();
  public final static native int ERROR_UART_OW_DATA_ERROR_get();
  public final static native int ERROR_UNSPECIFIED_get();
  public final static native int PIN_VALID_get();
  public final static native int PIN_GPIO_get();
  public final static native int PIN_PWM_get();
  public final static native int PIN_FAST_GPIO_get();
  public final static native int PIN_SPI_get();
  public final static native int PIN_I2C_get();
  public final static native int PIN_AIO_get();
  public final static native int PIN_UART_get();
  public final static native int I2C_STD_get();
  public final static native int I2C_FAST_get();
  public final static native int I2C_HIGH_get();
  public final static native int UART_PARITY_NONE_get();
  public final static native int UART_PARITY_EVEN_get();
  public final static native int UART_PARITY_ODD_get();
  public final static native int UART_PARITY_MARK_get();
  public final static native int UART_PARITY_SPACE_get();
  public final static native int init();
  public final static native String getVersion();
  public final static native int setPriority(int jarg1);
  public final static native int getPlatformType();
  public final static native void printError(int jarg1);
  public final static native boolean pinModeTest(int jarg1, int jarg2);
  public final static native long adcRawBits();
  public final static native long adcSupportedBits();
  public final static native String getPlatformName();
  public final static native String getPlatformVersion__SWIG_0(int jarg1);
  public final static native String getPlatformVersion__SWIG_1();
  public final static native long getPinCount();
  public final static native int getI2cBusCount();
  public final static native int getI2cBusId(int jarg1);
  public final static native String getPinName(int jarg1);
  public final static native int getGpioLookup(String jarg1);
  public final static native int getI2cLookup(String jarg1);
  public final static native int getSpiLookup(String jarg1);
  public final static native int getPwmLookup(String jarg1);
  public final static native int setLogLevel(int jarg1);
  public final static native boolean hasSubPlatform();
  public final static native boolean isSubPlatformId(int jarg1);
  public final static native int getSubPlatformId(int jarg1);
  public final static native int getSubPlatformIndex(int jarg1);
  public final static native int getDefaultI2cBus__SWIG_0(int jarg1);
  public final static native int getDefaultI2cBus__SWIG_1();
  public final static native int addSubplatform(int jarg1, String jarg2);
  public final static native int removeSubplatform(int jarg1);
  public final static native int initJsonPlatform(String jarg1);
  public final static native long gpioFromDesc(String jarg1);
  public final static native long aioFromDesc(String jarg1);
  public final static native long uartFromDesc(String jarg1);
  public final static native long spiFromDesc(String jarg1);
  public final static native long i2cFromDesc(String jarg1);
  public final static native long pwmFromDesc(String jarg1);
  public final static native int MODE_STRONG_get();
  public final static native int MODE_PULLUP_get();
  public final static native int MODE_PULLDOWN_get();
  public final static native int MODE_HIZ_get();
  public final static native int DIR_OUT_get();
  public final static native int DIR_IN_get();
  public final static native int DIR_OUT_HIGH_get();
  public final static native int DIR_OUT_LOW_get();
  public final static native int EDGE_NONE_get();
  public final static native int EDGE_BOTH_get();
  public final static native int EDGE_RISING_get();
  public final static native int EDGE_FALLING_get();
  public final static native long new_Gpio__SWIG_0(int jarg1, boolean jarg2, boolean jarg3);
  public final static native long new_Gpio__SWIG_1(int jarg1, boolean jarg2);
  public final static native long new_Gpio__SWIG_2(int jarg1);
  public final static native void delete_Gpio(long jarg1);
  public final static native int Gpio_edge(long jarg1, Gpio jarg1_, int jarg2);
  public final static native int Gpio_isr(long jarg1, Gpio jarg1_, int jarg2, java.lang.Runnable jarg3);
  public final static native int Gpio_isrExit(long jarg1, Gpio jarg1_);
  public final static native int Gpio_mode(long jarg1, Gpio jarg1_, int jarg2);
  public final static native int Gpio_dir(long jarg1, Gpio jarg1_, int jarg2);
  public final static native int Gpio_readDir(long jarg1, Gpio jarg1_);
  public final static native int Gpio_read(long jarg1, Gpio jarg1_);
  public final static native int Gpio_write(long jarg1, Gpio jarg1_, int jarg2);
  public final static native int Gpio_useMmap(long jarg1, Gpio jarg1_, boolean jarg2);
  public final static native int Gpio_getPin__SWIG_0(long jarg1, Gpio jarg1_, boolean jarg2);
  public final static native int Gpio_getPin__SWIG_1(long jarg1, Gpio jarg1_);
  public final static native long new_I2c__SWIG_0(int jarg1, boolean jarg2);
  public final static native long new_I2c__SWIG_1(int jarg1);
  public final static native void delete_I2c(long jarg1);
  public final static native int I2c_frequency(long jarg1, I2c jarg1_, int jarg2);
  public final static native int I2c_address(long jarg1, I2c jarg1_, short jarg2);
  public final static native short I2c_readByte(long jarg1, I2c jarg1_);
  public final static native int I2c_read(long jarg1, I2c jarg1_, byte[] jarg2);
  public final static native short I2c_readReg(long jarg1, I2c jarg1_, short jarg2);
  public final static native int I2c_readWordReg(long jarg1, I2c jarg1_, short jarg2);
  public final static native int I2c_readBytesReg(long jarg1, I2c jarg1_, short jarg2, byte[] jarg3);
  public final static native int I2c_writeByte(long jarg1, I2c jarg1_, short jarg2);
  public final static native int I2c_write(long jarg1, I2c jarg1_, byte[] jarg2);
  public final static native int I2c_writeReg(long jarg1, I2c jarg1_, short jarg2, short jarg3);
  public final static native int I2c_writeWordReg(long jarg1, I2c jarg1_, short jarg2, int jarg3);
  public final static native long new_Pwm__SWIG_0(int jarg1, boolean jarg2, int jarg3);
  public final static native long new_Pwm__SWIG_1(int jarg1, boolean jarg2);
  public final static native long new_Pwm__SWIG_2(int jarg1);
  public final static native void delete_Pwm(long jarg1);
  public final static native int Pwm_write(long jarg1, Pwm jarg1_, float jarg2);
  public final static native float Pwm_read(long jarg1, Pwm jarg1_);
  public final static native int Pwm_period(long jarg1, Pwm jarg1_, float jarg2);
  public final static native int Pwm_period_ms(long jarg1, Pwm jarg1_, int jarg2);
  public final static native int Pwm_period_us(long jarg1, Pwm jarg1_, int jarg2);
  public final static native int Pwm_pulsewidth(long jarg1, Pwm jarg1_, float jarg2);
  public final static native int Pwm_pulsewidth_ms(long jarg1, Pwm jarg1_, int jarg2);
  public final static native int Pwm_pulsewidth_us(long jarg1, Pwm jarg1_, int jarg2);
  public final static native int Pwm_enable(long jarg1, Pwm jarg1_, boolean jarg2);
  public final static native int Pwm_max_period(long jarg1, Pwm jarg1_);
  public final static native int Pwm_min_period(long jarg1, Pwm jarg1_);
  public final static native int SPI_MODE0_get();
  public final static native int SPI_MODE1_get();
  public final static native int SPI_MODE2_get();
  public final static native int SPI_MODE3_get();
  public final static native long new_Spi__SWIG_0(int jarg1);
  public final static native long new_Spi__SWIG_1(int jarg1, int jarg2);
  public final static native void delete_Spi(long jarg1);
  public final static native int Spi_mode(long jarg1, Spi jarg1_, int jarg2);
  public final static native int Spi_frequency(long jarg1, Spi jarg1_, int jarg2);
  public final static native int Spi_writeByte(long jarg1, Spi jarg1_, short jarg2);
  public final static native int Spi_writeWord(long jarg1, Spi jarg1_, int jarg2);
  public final static native byte[] Spi_write(long jarg1, Spi jarg1_, byte[] jarg2);
  public final static native int Spi_lsbmode(long jarg1, Spi jarg1_, boolean jarg2);
  public final static native int Spi_bitPerWord(long jarg1, Spi jarg1_, long jarg2);
  public final static native long new_Aio(int jarg1);
  public final static native void delete_Aio(long jarg1);
  public final static native long Aio_read(long jarg1, Aio jarg1_);
  public final static native float Aio_readFloat(long jarg1, Aio jarg1_);
  public final static native int Aio_setBit(long jarg1, Aio jarg1_, int jarg2);
  public final static native int Aio_getBit(long jarg1, Aio jarg1_);
  public final static native long new_Uart__SWIG_0(int jarg1);
  public final static native long new_Uart__SWIG_1(String jarg1);
  public final static native void delete_Uart(long jarg1);
  public final static native String Uart_getDevicePath(long jarg1, Uart jarg1_);
  public final static native String Uart_readStr(long jarg1, Uart jarg1_, int jarg2);
  public final static native int Uart_writeStr(long jarg1, Uart jarg1_, String jarg2);
  public final static native boolean Uart_dataAvailable__SWIG_0(long jarg1, Uart jarg1_, long jarg2);
  public final static native boolean Uart_dataAvailable__SWIG_1(long jarg1, Uart jarg1_);
  public final static native int Uart_flush(long jarg1, Uart jarg1_);
  public final static native int Uart_setBaudRate(long jarg1, Uart jarg1_, long jarg2);
  public final static native int Uart_setMode(long jarg1, Uart jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int Uart_setFlowcontrol(long jarg1, Uart jarg1_, boolean jarg2, boolean jarg3);
  public final static native int Uart_setTimeout(long jarg1, Uart jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int Uart_setNonBlocking(long jarg1, Uart jarg1_, boolean jarg2);

    static {
        try {
            System.loadLibrary("mraajava");
        } catch (UnsatisfiedLinkError e) {
            System.err.println("Native code library failed to load. \n" + e);
            System.exit(1);
        }

        if((mraa.class.getPackage().getSpecificationVersion() != null)
                &&  !(mraa.class.getPackage().getSpecificationVersion().equals("0.0"))
                && (mraa.getVersion() != null)){
            String javaAPIVersion = mraa.class.getPackage().getSpecificationVersion();
            String nativeAPIVersion = mraa.getVersion().substring(1);

            String javaMajor = javaAPIVersion.substring(0, javaAPIVersion.indexOf('.'));
            String nativeMajor = nativeAPIVersion.substring(0, nativeAPIVersion.indexOf('.'));

            if(Integer.parseInt(javaMajor) < Integer.parseInt(nativeMajor)){
                System.err.println("Java library is out of date. Please update the Java library.");
                System.err.println("Native library version is " + nativeAPIVersion + ". Java library version is " + javaAPIVersion + ".");
                System.exit(1);
            }
            if(Integer.parseInt(javaMajor) > Integer.parseInt(nativeMajor)){
                System.err.println("Native library is out of date. Please update the Native library.");
                System.err.println("Native library version is " + nativeAPIVersion + ". Java library version is " + javaAPIVersion + ".");
                System.exit(1);
            }

            String javaMinor = javaAPIVersion.substring(javaMajor.length() + 1, javaAPIVersion.indexOf('.', javaMajor.length() + 1));
            String nativeMinor = nativeAPIVersion.substring(nativeMajor.length() + 1, nativeAPIVersion.indexOf('.', nativeMajor.length() + 1));

            if(Integer.parseInt(javaMinor) < Integer.parseInt(nativeMinor)){
                System.err.println("Java library is out of date. Please consider updating the Java library.");
                System.err.println("Native library version is " + nativeAPIVersion + ". Java library version is " + javaAPIVersion + ".");
            }
            if(Integer.parseInt(javaMinor) > Integer.parseInt(nativeMinor)){
                System.err.println("Native library is out of date. Please consider updating the Native library.");
                System.err.println("Native library version is " + nativeAPIVersion + ". Java library version is " + javaAPIVersion + ".");
            }
        }
    }

}
