/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mraa;

public final class Pinmodes {
  public final static Pinmodes PIN_VALID = new Pinmodes("PIN_VALID", mraaJNI.PIN_VALID_get());
  public final static Pinmodes PIN_GPIO = new Pinmodes("PIN_GPIO", mraaJNI.PIN_GPIO_get());
  public final static Pinmodes PIN_PWM = new Pinmodes("PIN_PWM", mraaJNI.PIN_PWM_get());
  public final static Pinmodes PIN_FAST_GPIO = new Pinmodes("PIN_FAST_GPIO", mraaJNI.PIN_FAST_GPIO_get());
  public final static Pinmodes PIN_SPI = new Pinmodes("PIN_SPI", mraaJNI.PIN_SPI_get());
  public final static Pinmodes PIN_I2C = new Pinmodes("PIN_I2C", mraaJNI.PIN_I2C_get());
  public final static Pinmodes PIN_AIO = new Pinmodes("PIN_AIO", mraaJNI.PIN_AIO_get());
  public final static Pinmodes PIN_UART = new Pinmodes("PIN_UART", mraaJNI.PIN_UART_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static Pinmodes swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + Pinmodes.class + " with value " + swigValue);
  }

  private Pinmodes(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private Pinmodes(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private Pinmodes(String swigName, Pinmodes swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static Pinmodes[] swigValues = { PIN_VALID, PIN_GPIO, PIN_PWM, PIN_FAST_GPIO, PIN_SPI, PIN_I2C, PIN_AIO, PIN_UART };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

